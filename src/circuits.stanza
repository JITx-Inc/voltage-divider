#use-added-syntax(jitx)
defpackage voltage-divider/circuits:
  import core
  import jitx

  import voltage-divider/solver


doc: \<DOC>
Construct a voltage divider module

This function will construct an instantiable module that
implements a circuit for the passed voltage divider solution.

@param sol VoltageDivider characteristics as generated by the solver
@param name? Optional name for this module.
@return `pcb-module` instantiable

@member hi High side of the voltage divider
@member out Middle point of the voltage divider
@member lo Low side (ground) of the voltage divider
<DOC>
public defn voltage-divider (sol:VoltageDividerSolution -- name?:Maybe<String> = None()) -> Instantiable:
  pcb-module vdiv:
    match(name?):
      (given:One<String>):
        name = value(given)

    port hi : pin
    port out : pin
    port lo : pin

    public inst r-hi : to-jitx(r1(sol))
    public inst r-lo : to-jitx(r2(sol))
    net (r-hi.p[1], hi)
    net (r-lo.p[1], r-hi.p[2] out)
    net (r-lo.p[2], lo)
    property(self.output-voltage) = vo(sol)

  vdiv



doc: \<DOC>
Construct a voltage divider module

This module will attempt to compute a solution for a voltage divider
circuit based on the input and output specifications.

@param v-in Voltage input constraint
@param v-out Desired output voltage for the divider network.
@param current Nominal current through the resistive divider network
from `hi` to `lo`.
@param name? Optional name for this module.

@throws NoSolutionFoundError If not solution can be found.
<DOC>
public defn voltage-divider (
  --
  v-in:Toleranced
  v-out:Toleranced
  current:Double,
  name?:Maybe<String> = None()
  ) -> Instantiable:
  val cxt = VoltageDividerConstraints(
    v-in = v-in,
    v-out = v-out,
    current = current
  )
  voltage-divider(cxt, name? = name?)

doc: \<DOC>
Construct a voltage divider module

This module will attempt to compute a solution for a voltage divider
circuit based on the input and output specifications.

@param cxt Voltage divider constraints type
@param name? Optional name for this module.

@throws NoSolutionFoundError If not solution can be found.
<DOC>
public defn voltage-divider (cxt:VoltageDividerConstraints -- name?:Maybe<String> = None()) -> Instantiable:
  val sol = solve(cxt)
  voltage-divider(sol, name?)

