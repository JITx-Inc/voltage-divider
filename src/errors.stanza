defpackage voltage-divider/errors:
  import core
  import jitx


public defstruct NoPrecisionSatisfiesConstraintsError <: Exception :
  guesses:[Double, Double]
  ; Compliant?, Precision, Vout
  table:Tuple<[True|False, Percentage, Toleranced]>

defmethod print (o:OutputStream, e:NoPrecisionSatisfiesConstraintsError):
  print(o, "No Precision Series can meet the outlined requirements\n")
  print(o, "Initial Guess: r-hi=%_  r-lo=%_" % [guesses(e)[0], guesses(e)[1]])
  print(o,   "Precision    Vout:\n")
  for elem in table(e) do:
    print(o, "%_           %_" % [elem[1], elem[2]])

public defstruct VinRangeTooLargeError <: Exception :
  guesses:[Double, Double]
  vin-screen:Toleranced

defmethod print (o:OutputStream, e:VinRangeTooLargeError):
  print(o, "V-in Range is too large - No solution can be found\n")
  print(o, "Initial Guess: r-hi=%_  r-lo=%_" % [guesses(e)[0], guesses(e)[1]])
  print(o, "Vout for Vin with perfect resistors: %_" % [vin-screen(e)])

public defstruct IncompatibleVinVoutError <: Exception :
  v-in:Toleranced
  v-out:Toleranced

defmethod print (o:OutputStream, e:IncompatibleVinVoutError):
  print(o, "Incompatible V-in and V-out Constraints Encountered\n")
  print(o, "V-in: %_  V-out: %_" % [v-in(e), v-out(e)])


doc: \<DOC>
No Solution Found Error

This error is thrown when a solution for the voltage divider
cannot be found.
<DOC>
public defstruct NoSolutionFoundError <: Exception:
  msg:String

defmethod print (o:OutputStream, e:NoSolutionFoundError):
  print(o, "Failed to find a voltage divider solution that meets the provided requirements: %_" % [msg(e)])